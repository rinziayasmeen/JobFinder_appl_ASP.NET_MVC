//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace JobFinder_appl
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Job_finder_dbEntities : DbContext
    {
        public Job_finder_dbEntities()
            : base("name=Job_finder_dbEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CompReg_Tab> CompReg_Tab { get; set; }
        public virtual DbSet<Login_Tab> Login_Tab { get; set; }
        public virtual DbSet<UserReg_Tab> UserReg_Tab { get; set; }
        public virtual DbSet<Job_Tabl> Job_Tabl { get; set; }
        public virtual DbSet<ApplyJob_Tab1> ApplyJob_Tab1 { get; set; }
    
        public virtual int sp_compReg(Nullable<int> cid, string cna, string addr, string phn, string email, string webaddr, string loc)
        {
            var cidParameter = cid.HasValue ?
                new ObjectParameter("cid", cid) :
                new ObjectParameter("cid", typeof(int));
    
            var cnaParameter = cna != null ?
                new ObjectParameter("cna", cna) :
                new ObjectParameter("cna", typeof(string));
    
            var addrParameter = addr != null ?
                new ObjectParameter("addr", addr) :
                new ObjectParameter("addr", typeof(string));
    
            var phnParameter = phn != null ?
                new ObjectParameter("phn", phn) :
                new ObjectParameter("phn", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var webaddrParameter = webaddr != null ?
                new ObjectParameter("webaddr", webaddr) :
                new ObjectParameter("webaddr", typeof(string));
    
            var locParameter = loc != null ?
                new ObjectParameter("loc", loc) :
                new ObjectParameter("loc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_compReg", cidParameter, cnaParameter, addrParameter, phnParameter, emailParameter, webaddrParameter, locParameter);
        }
    
        public virtual int sp_loginsert(Nullable<int> rid, string una, string pwd, string type)
        {
            var ridParameter = rid.HasValue ?
                new ObjectParameter("rid", rid) :
                new ObjectParameter("rid", typeof(int));
    
            var unaParameter = una != null ?
                new ObjectParameter("una", una) :
                new ObjectParameter("una", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_loginsert", ridParameter, unaParameter, pwdParameter, typeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_Maxidlogin()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_Maxidlogin");
        }
    
        public virtual int sp_userReg(Nullable<int> uid, string na, Nullable<int> ag, string addr, string phn, string email, string qual, Nullable<int> exp, string skills, string photo, string resume)
        {
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            var naParameter = na != null ?
                new ObjectParameter("na", na) :
                new ObjectParameter("na", typeof(string));
    
            var agParameter = ag.HasValue ?
                new ObjectParameter("ag", ag) :
                new ObjectParameter("ag", typeof(int));
    
            var addrParameter = addr != null ?
                new ObjectParameter("addr", addr) :
                new ObjectParameter("addr", typeof(string));
    
            var phnParameter = phn != null ?
                new ObjectParameter("phn", phn) :
                new ObjectParameter("phn", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var qualParameter = qual != null ?
                new ObjectParameter("qual", qual) :
                new ObjectParameter("qual", typeof(string));
    
            var expParameter = exp.HasValue ?
                new ObjectParameter("exp", exp) :
                new ObjectParameter("exp", typeof(int));
    
            var skillsParameter = skills != null ?
                new ObjectParameter("skills", skills) :
                new ObjectParameter("skills", typeof(string));
    
            var photoParameter = photo != null ?
                new ObjectParameter("photo", photo) :
                new ObjectParameter("photo", typeof(string));
    
            var resumeParameter = resume != null ?
                new ObjectParameter("resume", resume) :
                new ObjectParameter("resume", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_userReg", uidParameter, naParameter, agParameter, addrParameter, phnParameter, emailParameter, qualParameter, expParameter, skillsParameter, photoParameter, resumeParameter);
        }
    
        public virtual int sp_login(string una, string pwd, ObjectParameter status)
        {
            var unaParameter = una != null ?
                new ObjectParameter("una", una) :
                new ObjectParameter("una", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_login", unaParameter, pwdParameter, status);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_loginid(string una, string pwd)
        {
            var unaParameter = una != null ?
                new ObjectParameter("una", una) :
                new ObjectParameter("una", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_loginid", unaParameter, pwdParameter);
        }
    
        public virtual ObjectResult<string> sp_logintype(string una, string pwd)
        {
            var unaParameter = una != null ?
                new ObjectParameter("una", una) :
                new ObjectParameter("una", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_logintype", unaParameter, pwdParameter);
        }
    
        public virtual int sp_insertJob(Nullable<int> cid, string jobtit, string exp, string skills, Nullable<int> vacny, Nullable<System.DateTime> date, string stat)
        {
            var cidParameter = cid.HasValue ?
                new ObjectParameter("cid", cid) :
                new ObjectParameter("cid", typeof(int));
    
            var jobtitParameter = jobtit != null ?
                new ObjectParameter("jobtit", jobtit) :
                new ObjectParameter("jobtit", typeof(string));
    
            var expParameter = exp != null ?
                new ObjectParameter("exp", exp) :
                new ObjectParameter("exp", typeof(string));
    
            var skillsParameter = skills != null ?
                new ObjectParameter("skills", skills) :
                new ObjectParameter("skills", typeof(string));
    
            var vacnyParameter = vacny.HasValue ?
                new ObjectParameter("vacny", vacny) :
                new ObjectParameter("vacny", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var statParameter = stat != null ?
                new ObjectParameter("stat", stat) :
                new ObjectParameter("stat", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insertJob", cidParameter, jobtitParameter, expParameter, skillsParameter, vacnyParameter, dateParameter, statParameter);
        }
    
        public virtual ObjectResult<sp_SelectAllJobs_Result> sp_SelectAllJobs()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SelectAllJobs_Result>("sp_SelectAllJobs");
        }
    
        public virtual int sp_jobsearches(string qry)
        {
            var qryParameter = qry != null ?
                new ObjectParameter("qry", qry) :
                new ObjectParameter("qry", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_jobsearches", qryParameter);
        }
    
        public virtual int sp_applyjob_insert(Nullable<int> uid, Nullable<int> cid, Nullable<int> jid, string cv, Nullable<System.DateTime> date, string sts)
        {
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            var cidParameter = cid.HasValue ?
                new ObjectParameter("cid", cid) :
                new ObjectParameter("cid", typeof(int));
    
            var jidParameter = jid.HasValue ?
                new ObjectParameter("jid", jid) :
                new ObjectParameter("jid", typeof(int));
    
            var cvParameter = cv != null ?
                new ObjectParameter("cv", cv) :
                new ObjectParameter("cv", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var stsParameter = sts != null ?
                new ObjectParameter("sts", sts) :
                new ObjectParameter("sts", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_applyjob_insert", uidParameter, cidParameter, jidParameter, cvParameter, dateParameter, stsParameter);
        }
    }
}
